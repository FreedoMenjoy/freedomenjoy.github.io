{"version":3,"sources":["scripts/util/forceQuerySelector.ts","scripts/openbox.ts"],"names":[],"mappings":";AAQ6C,aAR7C,SAAgB,EAAiD,EAAkB,QAAA,IAAA,IAAA,EAAA,UACjF,IAAM,EAAU,EAAO,cAAiB,GACxC,GAAe,MAAX,EACF,MAAM,MAAM,gCAAA,OAAgC,EAAQ,eAEtD,OAAO,EAGoC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,wBAAA,EAR7C,QAAA,mBAAA,EAQA,OAAO,OAAO,OAAQ,CAAE,mBAAkB;;ACGR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAXlC,IAAA,EAAA,QAAA,6BAEA,SAAgB,EAAS,GACvB,IAAM,GAAU,EAAA,EAAA,oBAAgC,GAClB,SAA1B,EAAQ,MAAM,QAChB,EAAQ,MAAM,QAAU,QAExB,EAAQ,MAAM,QAAU,OAL5B,QAAA,QAAA,EASA,OAAO,OAAO,OAAQ,CAAE,QAAO","file":"openbox.3b9cbabc.js","sourceRoot":"../src","sourcesContent":["export function forceQuerySelector<E extends Element = Element> (selector: string, origin: Pick<HTMLElement, 'querySelector'> = document): E {\n  const element = origin.querySelector<E>(selector);\n  if (element == null) {\n    throw Error(`forceQuerySelector: selector ${selector} not found`);\n  }\n  return element;\n}\n\nObject.assign(window, { forceQuerySelector });\n","import { forceQuerySelector } from './util/forceQuerySelector';\n\nexport function openbox (selector: string): void {\n  const element = forceQuerySelector<HTMLElement>(selector);\n  if (element.style.display === 'none') {\n    element.style.display = 'block';\n  } else {\n    element.style.display = 'none';\n  }\n}\n\nObject.assign(window, { openbox });\n"]}