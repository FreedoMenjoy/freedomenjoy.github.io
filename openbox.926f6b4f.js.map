{"version":3,"sources":["scripts/util/forceQuerySelector.ts","scripts/openbox.ts"],"names":[],"mappings":";AAgBkE,aAhBlE,SAAgB,EAAiD,EAAkB,QAAA,IAAA,IAAA,EAAA,UACjF,IAAM,EAAU,EAAO,cAAiB,GACxC,GAAe,MAAX,EACF,MAAM,IAAI,MAAM,GAAA,OAAG,EAAmB,KAAI,eAAA,OAAc,EAAQ,eAElE,OAAO,EAGT,SAAgB,EAAkD,EAAmB,QAAA,IAAA,IAAA,EAAA,UACnF,IAAM,EAAU,EAAO,eAAe,GACtC,GAAe,MAAX,EACF,MAAM,IAAI,MAAM,GAAA,OAAG,EAAoB,KAAI,SAAA,OAAQ,EAAS,eAE9D,OAAO,EAGyD,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,QAAA,wBAAA,EAhBlE,QAAA,mBAAA,EAQA,QAAA,oBAAA,EAQA,OAAO,OAAO,OAAQ,CAAE,mBAAkB,EAAE,oBAAmB;;ACKR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,QAAA,SAAA,QAAA,aAAA,EArBvD,IAAA,EAAA,QAAA,6BAEA,SAAgB,EAAS,IACP,EAAA,EAAA,oBAAgC,GACxC,MAAM,QAAU,QAG1B,SAAgB,EAAU,IACR,EAAA,EAAA,oBAAgC,GACxC,MAAM,QAAU,OAG1B,SAAgB,EAAW,GACzB,IAAM,GAAU,EAAA,EAAA,oBAAgC,GAClB,SAA1B,EAAQ,MAAM,QAChB,EAAQ,MAAM,QAAU,QAExB,EAAQ,MAAM,QAAU,OAf5B,QAAA,QAAA,EAKA,QAAA,SAAA,EAKA,QAAA,UAAA,EASA,OAAO,OAAO,OAAQ,CAAE,QAAO,EAAE,SAAQ,EAAE,UAAS","file":"openbox.926f6b4f.js","sourceRoot":"../src","sourcesContent":["export function forceQuerySelector<E extends Element = Element> (selector: string, origin: Pick<HTMLElement, 'querySelector'> = document): E {\n  const element = origin.querySelector<E>(selector);\n  if (element == null) {\n    throw new Error(`${forceQuerySelector.name}: selector ${selector} not found`);\n  }\n  return element;\n}\n\nexport function forceGetElementById<E extends Element = Element> (elementId: string, origin: NonElementParentNode = document): E {\n  const element = origin.getElementById(elementId);\n  if (element == null) {\n    throw new Error(`${forceGetElementById.name}: id ${elementId} not found`);\n  }\n  return element as E;\n}\n\nObject.assign(window, { forceQuerySelector, forceGetElementById });\n","import { forceQuerySelector } from './util/forceQuerySelector';\n\nexport function openbox (selector: string): void {\n  const element = forceQuerySelector<HTMLElement>(selector);\n  element.style.display = 'block';\n}\n\nexport function closebox (selector: string): void {\n  const element = forceQuerySelector<HTMLElement>(selector);\n  element.style.display = 'none';\n}\n\nexport function togglebox (selector: string): void {\n  const element = forceQuerySelector<HTMLElement>(selector);\n  if (element.style.display === 'none') {\n    element.style.display = 'block';\n  } else {\n    element.style.display = 'none';\n  }\n}\n\nObject.assign(window, { openbox, closebox, togglebox });\n"]}