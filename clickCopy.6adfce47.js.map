{"version":3,"sources":["scripts/clickCopy.ts"],"names":[],"mappings":";AAoBE,aAnBF,SAAgB,IAmBd,IAAA,EAAA,EAlBA,QAAQ,IAAI,aAAc,KAAK,aACpB,QAAX,EAAA,KAAK,cAAM,IAAA,GAAA,EAAA,KAAA,MACW,QAAtB,EAAA,KAAK,yBAAiB,IAAA,GAAA,EAAA,KAAA,KAAG,EAAG,OAEvB,UAAU,UAAU,UAAU,KAAK,aAAc,KAAK,WACzD,MAAM,sBAIV,SAAgB,EAAa,GAC3B,IAAM,EAAU,SAAS,eAAe,GACxC,GAAe,MAAX,EAAiB,MAAM,IAAI,MAAM,mBAAA,OAAmB,EAAS,eACjE,EAAU,KAAK,GAMf,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,QAAA,eAAA,EAnBF,QAAA,UAAA,EAUA,QAAA,YAAA,EAMA,OAAO,OAAO,OAAQ,CACpB,UAAS,EACT,YAAW","file":"clickCopy.6adfce47.js","sourceRoot":"../src","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nexport function clickCopy (this: HTMLTextAreaElement | HTMLInputElement): void {\n  console.log('click copy', this.textContent);\n  this.select?.();\n  this.setSelectionRange?.(0, 99999);\n\n  void navigator.clipboard.writeText(this.textContent!).then(() => {\n    alert('Текст скопирован');\n  });\n}\n\nexport function clickCopyId (elementId: string): void {\n  const element = document.getElementById(elementId) as HTMLTextAreaElement;\n  if (element == null) throw new Error(`Element with id ${elementId} not found`);\n  clickCopy.call(element);\n}\n\nObject.assign(window, {\n  clickCopy,\n  clickCopyId,\n});\n"]}